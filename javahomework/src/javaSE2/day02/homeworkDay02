-1- 简述节点流和处理流的区别，以及java流式输入输出的架构特点。
    - 1）按照流是否直接与特定的地方 (如磁盘、内存、设备等) 相连，分为节点流和处理流两类。节点流可以
         从或向一个特定的地方（节点）读写数据；处理流是对一个已存在的流的连接和封装，通过所封装的流的
         功能调用实现数据读写。
      2）处理流的构造方法总是以一个其他的流对象做参数。一个流对象经过其他流的多次包装，称为流的链接。
-2- 简述RandomAccessFile和FileInputStream以及FileOutputStream使用中的区别。
    - RandomAccessFile：随机访问文件，可以进行读写操作
    - FileInputStream：文件输入流，只可以进行文件的读操作
    - FileOutputStream：文件输出流，只可以进行文件的写操作
-3- FilesCopy.java
-4- FilesCopy.java
-5- 实现empList的序列化和反序列化
    - EmpList.java
-6- Serializable接口和transient关键字的意义
    - Serializable接口是启用其序列化功能的接口。实现java.io.Serializable 接口的类是可序列化的。没有
        实现此接口的类将不能使它们的任意状态被序列化或逆序列化。
    - transient：transient关键字标记的成员变量不参与序列化过程。
-7- 名词解释
    - ISO8859-1：单字节编码，向下兼容ASCII，其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致，
         0x80-0x9F之间是控制字符，0xA0-0xFF之间是文字符号。此字符集支持部分于欧洲使用的语言，包括阿尔巴尼亚语、
         巴斯克语、布列塔尼语、加泰罗尼亚语、丹麦语、荷兰语、法罗语、弗里西语、加利西亚语、德语、格陵兰语、冰岛语、
         爱尔兰盖尔语、意大利语、拉丁语、卢森堡语、挪威语、葡萄牙语、里托罗曼斯语、苏格兰盖尔语、西班牙语及瑞典语。
         英语虽然没有重音字母，但仍会标明为ISO/IEC 8859-1编码。除此之外，欧洲以外的部分语言，如南非荷兰语、斯瓦希里语、
         印尼语及马来语、菲律宾他加洛语等也可使用ISO/IEC 8859-1编码。法语及芬兰语本来也使用ISO/IEC 8859-1来表示。
         但因它没有法语使用的 œ、Œ、Ÿ 三个字母及芬兰语使用的 Š、š、Ž、ž ，故于1998年被ISO/IEC 8859-15所取代。
         （ISO 8859-15同时加入了欧元符号）
    - GBK：GBK全称《汉字内码扩展规范》（GBK即“国标”、“扩展”汉语拼音的第一个字母，英文名称：Chinese Internal Code Specification）
        ，中华人民共和国全国信息技术标准化技术委员会1995年12月1日制订，国家技术监督局标准化司、电子工业部科技与质量监督司1995年12月15
        日联合以技监标函1995 229号文件的形式，将它确定为技术规范指导性文件。这一版的GBK规范为1.0版。
    - UTF-8：UTF-8（8-bit Unicode Transformation Format）是一种针对Unicode的可变长度字符编码，又称万国码，
       由Ken Thompson于1992年创建。现在已经标准化为RFC 3629。UTF-8用1到6个字节编码Unicode字符。用在网页上可以
       统一页面显示中文简体繁体及其它语言（如英文，日文，韩文）。
-8- 分别简述ISR、OSW的工作原理
    - ISR:InputStreamReader-字符输入流，它使用指定的字符集读取字节并将它们解码为字符。 它使用的字符集可以通过名称指定，也可以明确指定，
            或者可以接受平台的默认字符集。每次调用一个InputStreamReader的read（）方法都可能导致从底层字节输入流中读取一个或多个字节。
            为了实现字节到字符的有效转换，可以从基础流中提取比满足当前读取操作所需的更多字节
    - OSW：OutputStreamWriter-字符输出流，将写入的字符编码成字节后写入一个字节流
-9- day01/PrintAllFileAndDir.java
-10- SplitFile.java
-11- FileUtils.java

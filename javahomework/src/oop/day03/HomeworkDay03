1、简述JVM垃圾回收机制
    垃圾回收器（Garbage Collection,GC）是JVM自带的一个线程（自动运行着的程序），用于回收没有任何引用指向的对象，
    编程人员不用担心内存管理GC会自动回收。
    GC线程判断对象是否可以回收的依据是该对象是否有引用指向，因此，当确定该对象不再使用时，应该及时将其
    引用设置为null。
    参考网页-----http://www.importnew.com/1551.html
2、Java也会出现内存泄漏
    java有GC回收，但是也会出现内存泄漏，当长生命周期的对象持有短生命周期的对象的引用，就很可能发生
    内存泄漏。尽管短生命周期的对象已经不再需要，但是长生命周期的对象一直持有它的引用导致其无法被回收。
    生命周期：成员变量的生命周期为：从对象在堆中创建开始到对象从堆中被回收结束
3、JVM中的内存分为三个部分：栈、堆、方法区（静态区，方法区实际也是堆，用于存储类、常量相关的信息）
    栈： - 存放局部变量
         - 先进后出，自下而上存储
         - 方法执行完毕，自动释放空间
    堆： - 存放new出来的对象
         - 需要GC回收
    方法区：- 存放类的信息（代码）、static变量、字符串常量等。
    Foo foo = new Foo();
    foo.f();
    Foo是引用类型，foo是Foo类创建的对象名（局部变量），在栈中开辟空间存放foo，new Foo();意思创建了这个名为foo的对象，此时在堆中
    开辟空间，用于存放对象地址，foo.f();,调用了Foo类中的名为f的无参方法，这个方法存储在方法区内
4、  public class Mammals{
    }
    public class Birds {
    }
    public class Bat extends Mammals,Bird{
    }
    这个代码错误---
    因为在子父类的继承关系中，一个子类只能继承一个父类，不能多重继承，但是作为父类可以同时被多个子类继承
5、5.6--测试对象--红色（packa：test）
